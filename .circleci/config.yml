version: 2.1
orbs:
  node: circleci/node@1.1.6
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.4.0

jobs:
  build:
    working_directory: ~/app
    executor:
      name: node/default
    steps:
      - checkout
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - node/with-cache:
          steps:
            - run: npm install
            - run: npm run ci
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/app
  deploy:
    working_directory: ~/app
    docker:
      - image: circleci/node:10-stretch
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: docker build -t vuesion .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p ~/caches
            docker save -o ~/caches/app.tar vuesion
      #      - save_cache:
      #          key: v1-{{ .Branch }}-{{ epoch }}
      #          paths:
      #            - /caches/app.tar
      - deploy:
          name: Push application Docker image
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker tag vuesion "${DOCKER_USER}/vuesion:${CIRCLE_SHA1}"
            docker push "${DOCKER_USER}/vuesion:${CIRCLE_SHA1}"
  create-deployment:
    executor:
      name: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: eks
          aws-region: us-east-1
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: k8s/deployment.yml
          resource-name: showcase

workflows:
  build-and-test:
    jobs:
      - build
      - deploy:
          requires:
            - build
      - create-deployment:
          requires:
            - deploy
          cluster-name: eks
      - aws-eks/update-container-image:
          cluster-name: eks
          aws-region: us-east-1
          container-image-updates: 'showcase=littleserg/vuesion:${CIRCLE_SHA1}'
          post-steps:
            - kubernetes/delete-resource:
                resource-names: showcase
                resource-types: deployment
                wait: true
          record: true
          requires:
            - create-deployment
          resource-name: showcase